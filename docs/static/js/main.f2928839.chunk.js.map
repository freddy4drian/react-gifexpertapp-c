{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEH,mCACVC,EAHa,iDAGoCC,UAAWH,GAH/C,6BAEH,oCAFG,SAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPxB,EAASC,GAEJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKrB,CAACpB,IAEGqB,EDlB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QASrB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mDAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAESA,GADEA,EAAIC,aEOxBgB,EA7BM,WAGjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAExBA,SAAWA,GADLA,Y,MCjB9B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f2928839.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >= 2 ){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const api_key = 'MfUpLfhZP3fqbkdU7vKgZ1hUTvW8LI5g';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${api_key}`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages );\r\n    // }, [ category ])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash animate__slower\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                        <GifGridItem \r\n                            key= { img.id }\r\n                            { ...img }\r\n                        />\r\n                            ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                }) \r\n                \r\n            })\r\n\r\n    }, [category])\r\n    \r\n    return state;\r\n\r\n}","import React, {useState} from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //'HunterXHunter'\r\n    //     // setCategories( [...categories,'HunterXHunter'] );\r\n    //     setCategories( cats => [...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                        />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}